" vi: set ft=vim :

" Global test utility.
let g:t = {}

function! g:t.log(...) abort
  " https://github.com/thinca/vim-themis/issues/24
  call themis#log(string(a:000))
endfunction

function! g:t.hooks() abort
  return viler#testutil#Hooks#new()
endfunction

function! g:t.use_buffers(hooks, opts) abort
  let work_dir = tempname()
  call mkdir(work_dir)
  let bufs = viler#testutil#Bufs#new(work_dir)
  let a:hooks.before_each.setup_bufs = function('s:buf_before_each', [bufs, get(a:opts, 'auto_add_current_buf', 0)])
  let a:hooks.after_each.cleanup_bufs = function('s:buf_after_each', [bufs])
  let a:hooks.after.rm_work_dir = function('s:buf_after', [bufs])
  return bufs
endfunction

function! s:buf_before_each(bufs, auto_add_current_buf) abort
  call a:bufs.reset()
  if a:auto_add_current_buf
    call a:bufs.add(bufnr('%'))
  endif
endfunction

function! s:buf_after_each(bufs) abort
  call a:bufs.cleanup()
endfunction

function! s:buf_after(bufs) abort
  call delete(a:bufs.work_dir, "rf")
endfunction

function! g:t.use_work_dir(hooks) abort
  let work_dir_path = tempname() . '/' 
  let a:hooks.before_each.prepare_work_dir = function('s:work_dir_before_each', [work_dir_path])
  let a:hooks.after_each.rm_work_dir = function('s:work_dir_after_each', [work_dir_path])

  let work_dir = {}
  let work_dir.path = work_dir_path
  let work_dir.make_files = function('s:setup_files', [work_dir_path])
  return work_dir
endfunction

function! s:setup_files(work_dir_path, lines) abort
  let flist = viler#testutil#Flist#new(a:lines)
  let ffs = viler#testutil#FlistFs#create()
  call ffs.flist_to_files(a:work_dir_path, flist)
endfunction

function! s:work_dir_before_each(work_dir_path) abort
  if isdirectory(a:work_dir_path)
    call delete(a:work_dir_path, 'rf')
  endif
  call mkdir(a:work_dir_path, 'p')
endfunction

function! s:work_dir_after_each(work_dir_path) abort
  call delete(a:work_dir_path, 'rf')
endfunction
